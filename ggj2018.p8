pico-8 cartridge // http://www.pico-8.com
version 15
__lua__
function _init()
  t=0
  mode=0
  cam={x=0,y=0,dx=0,dy=0}
  player = {
    x=7,
    y=5,
    dx=0,
    dy=0,
    speed=1,
    frame=1,
    step=4,
    t=0,
    sprites={1,2,3,4}
  }
  palt(0,false)
  shooting = false
  sats = {}
  shot_speed = 4
  shots = {}
  sat_sprites = {52,55,56,57}
  sat_colors = {c_52=6,
                c_55=8,
                c_56=9,
                c_57=11}
  level = 0
  active_sat = false
  choosing_angle = false
end

function _update()
  if mode==1 then
    update_game()
  elseif mode==2 then
    update_won_game()
  elseif mode==0 then
    update_title_screen()
  end
end

function _draw()
  if mode==1 then
    draw_game()
  elseif mode==2 then
    draw_won_game()
  elseif mode==0 then
    draw_title_screen()
  end
end

function is_moveable(x,y)
  return (not is_solid(x,y)) and
         (not is_hole(x,y))
end

function is_solid(x,y)
  return fget(mget(x,y),0)
end

function is_hole(x,y)
  return fget(mget(x,y),1)
end

function is_sat(x,y)
  return has(sat_sprites,
             mget(flr(x), flr(y)))
end

function adjust_sat(player)
  for sat in all(sats) do
    if (player.x==sat.x and
        player.y==sat.y) then
       return sat
    end
  end
  return false
end

function create_sat(x,y)
  local sat = {}
  sat.x=x
  sat.y=y
  sat.sp=mget(x,y)
  sat.c=sat_colors["c_"..sat.sp]
  sat.angle =0.75-(1/8)
  if sat.sp==57 then
    sat.powered=true
  else
    sat.powered=false
  end
  add(sats, sat)
end

function shoot()
  for sat in all(sats) do
    if sat.powered then
      create_shot(sat.x,
                  sat.y,
                  sat.angle)
    end
  end
  shooting = true
end

function has(list, thing)
  for item in all(list) do
    if item == thing then
      return true
    end
  end
  return false
end

function _init_level(level_idx)
  shooting = false
  shots = {}
  sats = {}
  -- iterate through map level cells
  --level*16%128,
  --    flr(level/8)*16
  local xstart = level*16%128
  local ystart = flr(level/8)*16
  cam.x=xstart*8
  cam.y=ystart*8
  for row=xstart,xstart+16 do
    for col=ystart,ystart+16 do
      if has(sat_sprites,
             mget(row, col)) then
        -- initialize the satellites
        -- /w random angles
        -- /w positions
     
        create_sat(row,col)
      end
      
      -- if this is a green spot,
      -- place player here
      if mget(row,col)==32 then
        player.x=row
        player.y=col
        printh("playerx:"..player.x.." playery:"..player.y)
        mset(row,col,0)
      end
    end
  end
end

function update_shots()
  for shot in all(shots) do
    if not shot.done then
      shot.fin.x+=sin(shot.angle)*shot_speed
      shot.fin.y+=cos(shot.angle)*shot_speed
      
      if is_solid(shot.fin.x/8,
                  shot.fin.y/8) then
        shot.done=true
      end
      
      if is_sat(shot.fin.x/8,
                shot.fin.y/8) then
         sat = get_sat(shot.fin.x/8,
                       shot.fin.y/8)
         printh("found a sat!!!!!!! "..sat.x)
         
         sat.powered=true
         shot.done=true
         create_shot(sat.x,
                     sat.y,
                     sat.angle)       
      end
    end
  end
end

function draw_shots()
  for shot in all(shots) do
    for i=-1,1 do
      for j=-1,1 do
        col = t+i+j%15
        line(shot.start.x+i,
             shot.start.y+j,
             shot.fin.x+i,
             shot.fin.y+j,
             col)
      end
    end
  end
end

function get_sat(x,y)
  for sat in all(sats) do
    if sat.x==flr(x) and
       sat.y==flr(y) then
       return sat
    end
  end
end

function create_shot(x,y,angle)
  local shot = {}
  shot.angle = angle
  shot.done = false
  shot.start = {
    x=x*8+3,
    y=y*8+4
  }
  shot.fin = {
    x=shot.start.x+(sin(shot.angle)*shot_speed),
    y=shot.start.y+(cos(shot.angle)*shot_speed)
  }
  add(shots, shot) 
end


function reset_after_shot()
  shooting=false
  shots = {}
  for sat in all(sats) do
    if sat.sp!=57 then
      sat.powered=false
    end
  end
end

function won_level()
  for sat in all(sats) do
    if not sat.powered then
      return false
    end
  end
  printh("we won!")
  return true
end

function next_level()
  level+=1
  _init_level(level)
end
-->8
function update_game()
  t+=1
  camera(cam.x,cam.y)
  printh("x: "..((level*16)%128).." y:"..(flr(level/8)*16).." mget:"..mget((level*16%128),(flr(level/8)*16)))
  if mget(level*16%128,
         flr(level/8)*16) == 16 then
    player.x=7
    player.y=5
    mode+=1
  end
  if choosing_angle and active_sat then
    if btnp(1) then
      active_sat.angle+=1/8
    elseif btnp(0) then
      active_sat.angle-=1/8
    end
    
    if btnp(4) then
      choosing_angle=false
    end
  elseif shooting then
    update_shots()
    cam.dx=rnd(1)
    cam.dy=rnd(1)
    if flr(rnd(2)) == 0 then
      cam.dx*=-1
    end
    if flr(rnd(2)) == 0 then
      cam.dy*=-1
    end
    camera(cam.x+cam.dx,cam.y+cam.dy)
    if btnp(5) then
      reset_after_shot()
      shooting=false
      shots = {}
    end
    
    -- check win condition
    if won_level() then
      next_level()
    end
  else
    if btnp(0) then
      player.dx-=player.speed
      player.flipx=true
    elseif btnp(1) then
      player.dx+=player.speed
      player.flipx=false
    elseif btnp(2) then
      player.dy-=player.speed
    elseif btnp(3) then
      player.dy+=player.speed
    end
    -- check if wall or something
    if is_moveable(player.x+player.dx,
                   player.y+player.dy) then
      --move player
      player.x+=player.dx
      player.y+=player.dy
    end
    player.dx=0
    player.dy=0
    
    -- adjusting sats
    if btnp(4) then
      active_sat = adjust_sat(player)
      if active_sat then choosing_angle=true end
    end
    
    -- shoot from powered sats!
    if btnp(5) then shoot() end
    
    -- animation
    player.t=(player.t+1)%player.step
    if (player.t==0) then
      player.frame=(player.frame+1)%#player.sprites
    end
  end
end

function draw_game()
  cls()
  rectfill(0,0,128,128,1)
  --[[ map(level*16%128,
      flr(level/8)*16, -- begin cells to draw
      0,0, -- screen pos
      16,16)  -- height/width
  ]]--
  map(0,0,0,0,128,128)
  --spr(1,player.x*8, player.y*8)
  spr(player.sprites[player.frame+1],
      player.x*8, player.y*8,
      1,1,
      player.flipx)
  
  -- draw sat angles
  for sat in all(sats) do
    if sat.powered then
      spr(57, sat.x*8,sat.y*8)
    end
    line((sat.x*8)+3,
         (sat.y*8)+4,
         (sat.x*8)+3+sin(sat.angle)*6,
         (sat.y*8)+4+cos(sat.angle)*6,
         sat.c)
    circfill((sat.x*8)+3+sin(sat.angle)*6,
             (sat.y*8)+4+cos(sat.angle)*6,
             1,
             sat.c)
  end
  
  --circfill(64,64,10,8)
  --circfill(player.x*8,player.y*8,10,1)
  if shooting then
    draw_shots()
  end
end
-->8
function update_title_screen()
  t+=1
  if btnp(4) then
    t=0
    mode+=1
    _init_level(level)
 	end
  -- animation
  player.t=(player.t+1)%player.step
  if (player.t==0) then
    player.frame=(player.frame+1)%#player.sprites
  end
end

function draw_title_screen()
  cls()
  rectfill(0,0,128,128,1)
  pretty_print("phone home",44,54+cos(t/30)*3,1)
  pretty_print("a to start",44,74+cos(t/30)*3,1)
  spr(player.sprites[player.frame+1],
      player.x*8, player.y*8,
      1,1,
      player.flipx)
end

function update_won_game()
  camera()
  t+=1
  -- animation
  player.t=(player.t+1)%player.step
  if (player.t==0) then
    player.frame=(player.frame+1)%#player.sprites
  end
end

function draw_won_game()
  cls()
  rectfill(0,0,128,128,1)
  pretty_print("you won!",46,64+cos(t/30)*3, 1)
  spr(player.sprites[player.frame+1],
      player.x*8, player.y*8,
      1,1,
      player.flipx)
end

function pretty_print(s,x,y,c)
  for i=-1,1 do
    for j=-1,1 do
      print(s,x+i,y+j,7)
    end
  end
  print(s,x,y,c)
end
__gfx__
00000000113333111333333113333331113333110000000000000000000000001110111100000000000000000000000000000000000000000000000000000000
00000000133333311333333113377771133777710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700133777711337777113333331133333310000000000000000000000001111110100000000000000000000000000000000000000000000000000000000
00077000133333313333333333333333133333310000000000000000000000001111110100000000000000000000000000000000000000000000000000000000
00077000333333331333333113333331333333330000000000000000000000001111110100000000000000000000000000000000000000000000000000000000
00700700133333311333333113333331133333310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000133333311311113113111131133333310000000000000000000000001110111100000000000000000000000000000000000000000000000000000000
00000000131111311311113113111131131111310000000000000000000000001110111100000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000122d22116666666600000000555111110000000011110001eee111119991111133311111000000000000000000000000000000000000000000000000
00000000dddddddd6262626600000000511511110000000000000010e11e11119119111131131111000000000000000000000000000000000000000000000000
00000000222222d26626262600000000511116110000000010000000e11111119111111131111111000000000000000000000000000000000000000000000000
00000000221222d16262626600000000511161110000000010000000e11111119111111131111111000000000000000000000000000000000000000000000000
00000000222222d266262626000000001516115100000000000100011e1111e11911119113111131000000000000000000000000000000000000000000000000
00000000ddddd1d162626266000000001551111500000000100000001ee1111e1991111913311113000000000000000000000000000000000000000000000000
00000000222d222266262626000000001555111500000000001000011eee111e1999111913331113000000000000000000000000000000000000000000000000
000000001221212266666666000000001551555500000000101110111ee1eeee1991999913313333000000000000000000000000000000000000000000000000
__gff__
0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000001030000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
3631313131313131313131313131313131313131313131313131313131313131100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131360000000020313131313131313131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131390000000000310000000000383131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131000000000000310000000000003131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131000000000000000000000000000031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131000000003600000000000000000031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131000000000000000000000000000031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313100000000000000363736313131000000000000000000000000000031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313100000000000000363636313131000000000000380000003100000031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313139000000000038000000313131000000000000000000313100000031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313100000000002000000031313131000000000000003131313136363631000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313100000000000000313131313131000000000031310036363636363631000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131000000000000000036363636373631000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131000000000000003136363636363631000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131000000000000000036363636363631000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3131313131313131313131313131313131313131313131313131313131313131000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
